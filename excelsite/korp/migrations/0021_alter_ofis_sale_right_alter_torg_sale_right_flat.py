# Generated by Django 4.2 on 2024-01-08 21:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('korp', '0020_alter_ofis_entrance_alter_ofis_floor_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='ofis',
            name='sale_right',
            field=models.CharField(blank=True, choices=[('Собственник', 'Собственник'), ('Посредник', 'Посредник'), ('Застройщик', 'Застройщик (для квартир)')], max_length=100, null=True, verbose_name='Право собственности (только при продаже)'),
        ),
        migrations.AlterField(
            model_name='torg',
            name='sale_right',
            field=models.CharField(blank=True, choices=[('Собственник', 'Собственник'), ('Посредник', 'Посредник'), ('Застройщик', 'Застройщик (для квартир)')], max_length=100, null=True, verbose_name='Право собственности (только при продаже)'),
        ),
        migrations.CreateModel(
            name='Flat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('adres', models.CharField(max_length=255, verbose_name='Адрес')),
                ('map', models.TextField(verbose_name='Код с яндекс карты')),
                ('square', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Площадь кв.м.')),
                ('photo', models.ImageField(blank=True, upload_to='photos/osn', verbose_name='Фото (основное)')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('sale', models.BooleanField(default=False, verbose_name='Продажа')),
                ('price_sale', models.DecimalField(blank=True, decimal_places=0, default=0, max_digits=10, null=True, verbose_name='Цена продажи')),
                ('sale_type', models.CharField(blank=True, choices=[('1', 'Продажа'), ('2', 'Переуступка прав аренды')], max_length=100, null=True, verbose_name='Тип продажи')),
                ('sale_right', models.CharField(blank=True, choices=[('Собственник', 'Собственник'), ('Посредник', 'Посредник'), ('Застройщик', 'Застройщик (для квартир)')], max_length=100, null=True, verbose_name='Право собственности (только при продаже)')),
                ('rent', models.BooleanField(default=False, verbose_name='Аренда')),
                ('price_rent', models.DecimalField(blank=True, decimal_places=0, default=0, max_digits=10, null=True, verbose_name='Цена аренды')),
                ('rent_type', models.CharField(blank=True, choices=[('1', 'Прямая'), ('2', 'Субаренда')], max_length=100, null=True, verbose_name='Тип аренды')),
                ('okrug', models.CharField(choices=[('13', 'не применимо'), ('1', 'Центральный'), ('2', 'Северный'), ('3', 'Северо-Восточный'), ('4', 'Восточный'), ('5', 'Юго-Восточный'), ('6', 'Южный'), ('7', 'Юго-Западный'), ('8', 'Западный'), ('9', 'Северо-Западный'), ('10', 'Зеленоградский'), ('11', 'Троицкий'), ('12', 'Новомосковский')], max_length=100, null=True, verbose_name='Округ')),
                ('is_published', models.BooleanField(default=True, verbose_name='Публикация')),
                ('photo1', models.ImageField(blank=True, null=True, upload_to='photos/dop', verbose_name='доп.фото1')),
                ('photo2', models.ImageField(blank=True, null=True, upload_to='photos/dop', verbose_name='доп.фото2')),
                ('photo3', models.ImageField(blank=True, null=True, upload_to='photos/dop', verbose_name='доп.фото3')),
                ('photo4', models.ImageField(blank=True, null=True, upload_to='photos/dop', verbose_name='доп.фото4')),
                ('photo5', models.ImageField(blank=True, null=True, upload_to='photos/dop', verbose_name='доп.фото5')),
                ('photo6', models.ImageField(blank=True, null=True, upload_to='photos/dop', verbose_name='доп.фото6')),
                ('photo7', models.ImageField(blank=True, null=True, upload_to='photos/dop', verbose_name='доп.фото7')),
                ('photo8', models.ImageField(blank=True, null=True, upload_to='photos/dop', verbose_name='доп.фото8')),
                ('photo9', models.ImageField(blank=True, null=True, upload_to='photos/dop', verbose_name='доп.фото9')),
                ('photo10', models.ImageField(blank=True, null=True, upload_to='photos/dop', verbose_name='доп.фото10')),
                ('maplink', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ссылка на яндекс карту')),
                ('description', models.TextField(null=True, verbose_name='Описание')),
                ('export_avito', models.BooleanField(default=False, verbose_name='Avito экспорт')),
                ('export_yandex', models.BooleanField(default=False, verbose_name='Яндекс экспорт')),
                ('export_afi', models.BooleanField(default=False, verbose_name='Afi экспорт')),
                ('export_domclik', models.BooleanField(default=False, verbose_name='Domclik экспорт')),
                ('export_5', models.BooleanField(default=False, verbose_name='экспорт')),
                ('export_6', models.BooleanField(default=False, verbose_name='экспорт')),
                ('metatitle', models.CharField(blank=True, max_length=255, null=True, verbose_name='meta title')),
                ('metadescription', models.TextField(blank=True, null=True, verbose_name='meta description')),
                ('floor', models.CharField(choices=[('Подвальный', 'Подвальный'), ('Цокольный', 'Цокольный'), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31), (32, 32), (33, 33), (34, 34), (35, 35), (36, 36), (37, 37), (38, 38), (39, 39), (40, 40), (41, 41), (42, 42), (43, 43), (44, 44), (45, 45), (46, 46), (47, 47), (48, 48), (49, 49), (50, 50), (51, 51), (52, 52), (53, 53), (54, 54), (55, 55), (56, 56), (57, 57), (58, 58), (59, 59), (60, 60), (61, 61), (62, 62), (63, 63), (64, 64), (65, 65), (66, 66), (67, 67), (68, 68), (69, 69), (70, 70), (71, 71), (72, 72), (73, 73), (74, 74), (75, 75), (76, 76), (77, 77), (78, 78), (79, 79), (80, 80), (81, 81), (82, 82), (83, 83), (84, 84), (85, 85), (86, 86), (87, 87), (88, 88), (89, 89), (90, 90), (91, 91), (92, 92), (93, 93), (94, 94), (95, 95), (96, 96), (97, 97), (98, 98)], max_length=10, null=True, verbose_name='Этаж')),
                ('floors', models.IntegerField(blank=True, null=True, verbose_name='Этажность')),
                ('buildclass', models.CharField(blank=True, choices=[('А', 'А'), ('А+', 'А+'), ('B', 'B'), ('B+', 'B+'), ('C', 'C'), ('C+', 'C+'), ('D', 'D'), ('D+', 'D+')], max_length=10, null=True, verbose_name='Класс здания')),
                ('bc', models.CharField(blank=True, max_length=255, null=True, verbose_name='Наименование БЦ')),
                ('otdelka', models.CharField(blank=True, choices=[('без отделки', 'без отделки'), ('чистовая', 'чистовая'), ('офисная', 'офисная')], max_length=50, null=True, verbose_name='Отделка (обязательно для - Офис, ПСН, Торговое помещение, Питание,Гостиница, Здание)')),
                ('buildtype', models.CharField(blank=True, choices=[('Бизнес-центр ', 'Бизнес-центр '), ('Торговый центр', 'Торговый центр'), ('Административное здание', 'Административное здание'), ('Жилой дом', 'Жилой дом'), ('другой', 'другой')], max_length=100, null=True, verbose_name='Тип здания (обязательно для: Офис, ПСН, Торговое, Склад, Производственное, Питания , Гостиница, Автосервис , Здание)')),
                ('height', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Высота потолка (м)')),
                ('entrance', models.CharField(choices=[('С улицы', 'С улицы'), ('Со двора', 'Со двора')], max_length=10, null=True, verbose_name='Вход (обязательно для: ПСН, Питание)')),
                ('parking', models.CharField(blank=True, choices=[('Бизнес-центр ', 'Бизнес-центр '), ('Торговый центр', 'Торговый центр'), ('Административное здание', 'Административное здание'), ('Жилой дом', 'Жилой дом'), ('другой', 'другой')], max_length=100, null=True, verbose_name='Тип парковки (обязательно для: Офис, ПСН, Торговое, Питание, Гостиница, Здание) ')),
                ('layout', models.CharField(blank=True, choices=[('Бизнес-центр ', 'Бизнес-центр '), ('Торговый центр', 'Торговый центр'), ('Административное здание', 'Административное здание'), ('Жилой дом', 'Жилой дом'), ('другой', 'другой')], max_length=100, null=True, verbose_name='Раскладка (для офисов обязательна)')),
                ('marketType', models.CharField(choices=[('Новостройка', 'Новостройка'), ('Вторичка', 'Вторичка')], max_length=100, null=True, verbose_name='Новостройка или Вторичка ')),
                ('houseType', models.CharField(choices=[('Кирпичный', 'Кирпичный'), ('Панельный', 'Панельный'), ('Блочный', 'Блочный'), ('Монолитный', 'Монолитный'), ('Монолитно-кирпичный', 'Монолитно-кирпичный')], max_length=100, null=True, verbose_name='Тип дома')),
                ('rooms', models.CharField(choices=[('Студия', 'Студия'), ('Своб. планировка', 'Своб. планировка'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10 и более', '10 и более')], max_length=100, null=True, verbose_name='Тип дома')),
                ('status', models.CharField(choices=[('Студия', 'Студия'), ('Своб. планировка', 'Своб. планировка'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10 и более', '10 и более')], max_length=100, null=True, verbose_name='Статус')),
                ('owner', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='korp.owner', verbose_name='Владелец')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'Квартира',
                'verbose_name_plural': 'Квартиры',
                'ordering': ['time_create', 'title'],
                'abstract': False,
            },
        ),
    ]
